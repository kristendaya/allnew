{"filter":false,"title":"gpt.py","tooltip":"/chatbot4/gpt.py","undoManager":{"mark":8,"position":8,"stack":[[{"start":{"row":0,"column":0},"end":{"row":35,"column":43},"action":"insert","lines":["import openai","","# OpenAI API 키 설정","api_key = \"YOUR_OPENAI_API_KEY\"","openai.api_key = api_key","","# FAQ 데이터 준비 (질문과 답변 쌍)","faq_data = [","    {","        \"question\": \"What is your return policy?\",","        \"answer\": \"Our return policy lasts 30 days from the date of purchase...\"","    },","    {","        \"question\": \"How do I track my order?\",","        \"answer\": \"Once your order is shipped, you will receive a tracking link...\"","    },","    # 다른 질문과 답변들도 추가해주세요.","]","","def get_answer(question):","    # FAQ 데이터 중에서 사용자의 질문과 가장 유사한 질문을 찾습니다.","    best_match = max(faq_data, key=lambda x: similarity(x[\"question\"], question))","    return best_match[\"answer\"]","","def similarity(str1, str2):","    # 두 문자열 간의 유사도를 측정합니다. (실제로는 더 정교한 방법이 필요합니다.)","    return 1.0","","def get_gpt_answer(question):","    # GPT-3.5 API를 사용하여 사용자의 질문에 대한 답변 생성","    response = openai.Completion.create(","        engine=\"text-davinci-002\",  # GPT-3.5 모델 선택","        prompt=question,","        max_tokens=100  # 생성된 답변의 최대 길이 제한","    )","    return response.choices[0].text.strip()"],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":35,"column":43},"action":"remove","lines":["import openai","","# OpenAI API 키 설정","api_key = \"YOUR_OPENAI_API_KEY\"","openai.api_key = api_key","","# FAQ 데이터 준비 (질문과 답변 쌍)","faq_data = [","    {","        \"question\": \"What is your return policy?\",","        \"answer\": \"Our return policy lasts 30 days from the date of purchase...\"","    },","    {","        \"question\": \"How do I track my order?\",","        \"answer\": \"Once your order is shipped, you will receive a tracking link...\"","    },","    # 다른 질문과 답변들도 추가해주세요.","]","","def get_answer(question):","    # FAQ 데이터 중에서 사용자의 질문과 가장 유사한 질문을 찾습니다.","    best_match = max(faq_data, key=lambda x: similarity(x[\"question\"], question))","    return best_match[\"answer\"]","","def similarity(str1, str2):","    # 두 문자열 간의 유사도를 측정합니다. (실제로는 더 정교한 방법이 필요합니다.)","    return 1.0","","def get_gpt_answer(question):","    # GPT-3.5 API를 사용하여 사용자의 질문에 대한 답변 생성","    response = openai.Completion.create(","        engine=\"text-davinci-002\",  # GPT-3.5 모델 선택","        prompt=question,","        max_tokens=100  # 생성된 답변의 최대 길이 제한","    )","    return response.choices[0].text.strip()"],"id":2},{"start":{"row":0,"column":0},"end":{"row":52,"column":0},"action":"insert","lines":["import openai","","# OpenAI API 키 설정","api_key = \"YOUR_OPENAI_API_KEY\"","openai.api_key = api_key","","# FAQ 데이터 준비 (질문과 답변 쌍)","faq_data = [","    {","        \"question\": \"What is your return policy?\",","        \"answer\": \"Our return policy lasts 30 days from the date of purchase...\"","    },","    {","        \"question\": \"How do I track my order?\",","        \"answer\": \"Once your order is shipped, you will receive a tracking link...\"","    },","    # 다른 질문과 답변들도 추가해주세요.","]","","def get_answer(question):","    # FAQ 데이터 중에서 사용자의 질문과 가장 유사한 질문을 찾습니다.","    best_match = max(faq_data, key=lambda x: similarity(x[\"question\"], question))","    return best_match[\"answer\"]","","def similarity(str1, str2):","    # 두 문자열 간의 유사도를 측정합니다. (실제로는 더 정교한 방법이 필요합니다.)","    return 1.0","","def get_gpt_answer(question):","    # GPT-3.5 API를 사용하여 사용자의 질문에 대한 답변 생성","    response = openai.Completion.create(","        engine=\"text-davinci-002\",  # GPT-3.5 모델 선택","        prompt=question,","        max_tokens=100  # 생성된 답변의 최대 길이 제한","    )","    return response.choices[0].text.strip()","","# 사용자 입력을 받아 FAQ 챗봇 또는 GPT-3.5를 통해 답변을 제공합니다.","while True:","    user_input = input(\"You: \")","    if user_input.lower() in [\"exit\", \"quit\"]:","        break","","    # FAQ 데이터에서 유사한 질문을 찾습니다.","    faq_answer = get_answer(user_input)","","    # FAQ 데이터에 유사한 질문이 없는 경우 GPT-3.5를 통해 답변을 생성합니다.","    if not faq_answer:","        gpt_answer = get_gpt_answer(user_input)","        print(\"GPT-3.5:\", gpt_answer)","    else:","        print(\"FAQ Bot:\", faq_answer)",""]}],[{"start":{"row":4,"column":23},"end":{"row":4,"column":24},"action":"remove","lines":["y"],"id":3},{"start":{"row":4,"column":22},"end":{"row":4,"column":23},"action":"remove","lines":["e"]},{"start":{"row":4,"column":21},"end":{"row":4,"column":22},"action":"remove","lines":["k"]},{"start":{"row":4,"column":20},"end":{"row":4,"column":21},"action":"remove","lines":["_"]},{"start":{"row":4,"column":19},"end":{"row":4,"column":20},"action":"remove","lines":["i"]},{"start":{"row":4,"column":18},"end":{"row":4,"column":19},"action":"remove","lines":["p"]},{"start":{"row":4,"column":17},"end":{"row":4,"column":18},"action":"remove","lines":["a"]}],[{"start":{"row":4,"column":17},"end":{"row":4,"column":19},"action":"insert","lines":["\"\""],"id":5}],[{"start":{"row":4,"column":18},"end":{"row":4,"column":69},"action":"insert","lines":["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"],"id":6}],[{"start":{"row":0,"column":0},"end":{"row":52,"column":0},"action":"remove","lines":["import openai","","# OpenAI API 키 설정","api_key = \"YOUR_OPENAI_API_KEY\"","openai.api_key = \"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\"","","# FAQ 데이터 준비 (질문과 답변 쌍)","faq_data = [","    {","        \"question\": \"What is your return policy?\",","        \"answer\": \"Our return policy lasts 30 days from the date of purchase...\"","    },","    {","        \"question\": \"How do I track my order?\",","        \"answer\": \"Once your order is shipped, you will receive a tracking link...\"","    },","    # 다른 질문과 답변들도 추가해주세요.","]","","def get_answer(question):","    # FAQ 데이터 중에서 사용자의 질문과 가장 유사한 질문을 찾습니다.","    best_match = max(faq_data, key=lambda x: similarity(x[\"question\"], question))","    return best_match[\"answer\"]","","def similarity(str1, str2):","    # 두 문자열 간의 유사도를 측정합니다. (실제로는 더 정교한 방법이 필요합니다.)","    return 1.0","","def get_gpt_answer(question):","    # GPT-3.5 API를 사용하여 사용자의 질문에 대한 답변 생성","    response = openai.Completion.create(","        engine=\"text-davinci-002\",  # GPT-3.5 모델 선택","        prompt=question,","        max_tokens=100  # 생성된 답변의 최대 길이 제한","    )","    return response.choices[0].text.strip()","","# 사용자 입력을 받아 FAQ 챗봇 또는 GPT-3.5를 통해 답변을 제공합니다.","while True:","    user_input = input(\"You: \")","    if user_input.lower() in [\"exit\", \"quit\"]:","        break","","    # FAQ 데이터에서 유사한 질문을 찾습니다.","    faq_answer = get_answer(user_input)","","    # FAQ 데이터에 유사한 질문이 없는 경우 GPT-3.5를 통해 답변을 생성합니다.","    if not faq_answer:","        gpt_answer = get_gpt_answer(user_input)","        print(\"GPT-3.5:\", gpt_answer)","    else:","        print(\"FAQ Bot:\", faq_answer)",""],"id":7},{"start":{"row":0,"column":0},"end":{"row":42,"column":33},"action":"insert","lines":["import openai","","# OpenAI API 키 설정","api_key = \"YOUR_OPENAI_API_KEY\"","openai.api_key = api_key","","# 기존의 FAQ 데이터","faq_data = [","    {","        \"question\": \"What is your return policy?\",","        \"answer\": \"Our return policy lasts 30 days from the date of purchase...\"","    },","    {","        \"question\": \"How do I track my order?\",","        \"answer\": \"Once your order is shipped, you will receive a tracking link...\"","    },","    # 다른 질문과 답변들도 추가해주세요.","]","","# 새로운 FAQ 데이터 추가","new_faq = {","    \"question\": \"How can I contact customer support?\",","    \"answer\": \"You can contact our customer support team through phone or email...\"","}","faq_data.append(new_faq)","","def get_gpt_answer(question):","    # GPT-3.5 API를 사용하여 사용자의 질문에 대한 답변 생성","    response = openai.Completion.create(","        engine=\"text-davinci-002\",  # GPT-3.5 모델 선택","        prompt=question,","        max_tokens=100  # 생성된 답변의 최대 길이 제한","    )","    return response.choices[0].text.strip()","","# 사용자 입력을 받아 GPT-3.5를 통해 답변을 제공합니다.","while True:","    user_input = input(\"You: \")","    if user_input.lower() in [\"exit\", \"quit\"]:","        break","","    gpt_answer = get_gpt_answer(user_input)","    print(\"GPT-3.5:\", gpt_answer)"]}],[{"start":{"row":3,"column":11},"end":{"row":3,"column":30},"action":"remove","lines":["YOUR_OPENAI_API_KEY"],"id":8},{"start":{"row":3,"column":11},"end":{"row":3,"column":62},"action":"insert","lines":["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"]}],[{"start":{"row":29,"column":31},"end":{"row":29,"column":32},"action":"remove","lines":["2"],"id":9}],[{"start":{"row":29,"column":31},"end":{"row":29,"column":32},"action":"insert","lines":["3"],"id":10}],[{"start":{"row":6,"column":11},"end":{"row":6,"column":23},"action":"remove","lines":["YOUR_API_KEY"],"id":13},{"start":{"row":6,"column":11},"end":{"row":6,"column":62},"action":"insert","lines":["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"]}],[{"start":{"row":0,"column":0},"end":{"row":46,"column":13},"action":"insert","lines":["from flask import Flask, request, jsonify","import openai","","app = Flask(__name__)","","# OpenAI API key setup","api_key = 'YOUR_API_KEY'  # Replace 'YOUR_API_KEY' with your actual API key","openai.api_key = api_key","","# FAQ data","faq_data = [","    {","        \"question\": \"What is your return policy?\",","        \"answer\": \"Our return policy lasts 30 days from the date of purchase...\"","    },","    {","        \"question\": \"How do I track my order?\",","        \"answer\": \"Once your order is shipped, you will receive a tracking link...\"","    },","    # Add more FAQ questions and answers here.","]","","def get_gpt_answer(question):","    # Use GPT-3.5 API to generate an answer for all questions","    response = openai.Completion.create(","        engine=\"text-davinci-003\",","        prompt=question,","        max_tokens=100","    )","    return response.choices[0].text.strip()","","@app.route('/api/faq', methods=['POST'])","def process_faq():","    user_input = request.json.get('question')","","    # Check if the user's question matches any FAQ question","    faq_answer = next((faq[\"answer\"] for faq in faq_data if faq[\"question\"].lower() == user_input.lower()), None)","","    if faq_answer:","        return jsonify({\"response\": faq_answer})","    else:","        # If the question is not in the FAQ data, use GPT-3.5 for the answer","        gpt_answer = get_gpt_answer(user_input)","        return jsonify({\"response\": gpt_answer})","","if __name__ == '__main__':","    app.run()"],"id":12}],[{"start":{"row":0,"column":0},"end":{"row":42,"column":33},"action":"remove","lines":["import openai","","# OpenAI API 키 설정","api_key = \"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\"","openai.api_key = api_key","","# 기존의 FAQ 데이터","faq_data = [","    {","        \"question\": \"What is your return policy?\",","        \"answer\": \"Our return policy lasts 30 days from the date of purchase...\"","    },","    {","        \"question\": \"How do I track my order?\",","        \"answer\": \"Once your order is shipped, you will receive a tracking link...\"","    },","    # 다른 질문과 답변들도 추가해주세요.","]","","# 새로운 FAQ 데이터 추가","new_faq = {","    \"question\": \"How can I contact customer support?\",","    \"answer\": \"You can contact our customer support team through phone or email...\"","}","faq_data.append(new_faq)","","def get_gpt_answer(question):","    # GPT-3.5 API를 사용하여 사용자의 질문에 대한 답변 생성","    response = openai.Completion.create(","        engine=\"text-davinci-003\",  # GPT-3.5 모델 선택","        prompt=question,","        max_tokens=100  # 생성된 답변의 최대 길이 제한","    )","    return response.choices[0].text.strip()","","# 사용자 입력을 받아 GPT-3.5를 통해 답변을 제공합니다.","while True:","    user_input = input(\"You: \")","    if user_input.lower() in [\"exit\", \"quit\"]:","        break","","    gpt_answer = get_gpt_answer(user_input)","    print(\"GPT-3.5:\", gpt_answer)"],"id":11}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":9,"column":44},"end":{"row":9,"column":44},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1690347867714,"hash":"34b4ca6a0c9b6c9cc4fac1dce09aba7d3842f5e8"}